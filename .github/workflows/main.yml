name: CI Build
on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch on Push and any branches on PR
  push:
    branches:
      - master
      - next
  pull_request:
    branches:
      - '**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run:
    name: Node ${{ matrix.node }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        node: [20]

    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - run: node --version
      - run: npm --version

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Run yarn install dependencies
        run: yarn --frozen-lockfile

      - name: Lint
        run: yarn lint

      - name: Prettier
        run: yarn prettier:check

      - name: Run Project Build
        run: yarn build

      - name: Run Vitest unit tests
        if: ${{ !contains(github.event.head_commit.message, format('chore{0} release', ':')) }}
        run: yarn test:coverage

      - name: Upload Vitest coverage to Codecov
        if: ${{ !contains(github.event.head_commit.message, format('chore{0} release', ':')) }}
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: coverage
          verbose: true

      - name: Website Prod Build (served for Cypress)
        run: yarn build:demo

      - name: Run Cypress E2E tests
        uses: cypress-io/github-action@v6
        with:
          install: false
          # working-directory: packages/dnd
          start: yarn vite:preview
          wait-on: 'http://localhost:4300'
          config-file: test/cypress.config.ts
          browser: chrome
          record: false
        env:
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # pass GitHub token to allow accurately detecting a build vs a re-run build
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # deploy (re-publish) GitHub demo page with a Prod build but only when merging to "master" branch
      # and the commit message contains the text "chore: release"
      - name: Deploy to gh-pages
        if: |
          github.ref == 'refs/heads/master' &&
          contains(github.event.head_commit.message, format('chore{0} release', ':')) || contains(github.event.head_commit.message, '[refresh gh-pages]')
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./website
